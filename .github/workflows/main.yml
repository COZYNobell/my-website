name: Full CI/CD Pipeline with Terraform and EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1. 애플리케이션 테스트 및 이미지 빌드/푸시
  build-and-push:
    name: Build and Push App Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write # AWS OIDC 인증을 위해 필요
      contents: read
    outputs:
      image_uri: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-node-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI_WITH_SHA=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          IMAGE_URI_LATEST=$ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker build -t $IMAGE_URI_WITH_SHA -t $IMAGE_URI_LATEST .
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
          echo "image=$IMAGE_URI_WITH_SHA" >> $GITHUB_OUTPUT

  # 2. Terraform으로 인프라 생성/업데이트
  provision-infra:
    name: 'Terraform: Provision Infrastructure'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
        aws-region: ap-northeast-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform -chdir=terraform init

    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve
      
  # 3. 생성된 EKS 클러스터에 앱 및 모니터링 배포
  deploy-to-eks:
    name: 'Deploy Apps to EKS'
    runs-on: ubuntu-latest
    needs: [build-and-push, provision-infra] # 빌드와 인프라 작업이 모두 끝나야 실행

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
        aws-region: ap-northeast-2
    
    - name: Install Utilities (kubectl, helm)
      run: |
        # ... (이전과 동일한 kubectl, helm 설치 스크립트)

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region ap-northeast-2 --name my-weather-app-cluster

    - name: Deploy Addons & Apps
      run: |
        # ... (이전과 동일한 모니터링 스택 및 날씨 앱 배포 스크립트)
