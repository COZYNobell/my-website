name: Destroy AWS EKS Cluster

on:
  # 이 워크플로우는 수동으로만 실행되도록 설정합니다.
  # 실수로 클러스터를 삭제하는 것을 방지합니다.
  workflow_dispatch:

jobs:
  destroy-cluster:
    name: Destroy AWS EKS Cluster
    runs-on: ubuntu-latest
    permissions:
      id-token: write # IAM OIDC 연동을 위해 필요
      contents: read

    steps:
      # 1. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ap-northeast-2

      # 2. eksctl 설치
      - name: Install eksctl
        run: |
          echo "Installing eksctl..."
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version

      # 3. EKS 클러스터 삭제
      # 이 과정은 생성보다 빠르지만, 여전히 몇 분 정도 소요될 수 있습니다.
      - name: Delete EKS cluster
        run: |
          eksctl delete cluster --name my-weather-app-cluster --region ap-northeast-2 --wait
          echo "✅ EKS Cluster 'my-weather-app-cluster' deletion command sent."

      # 4. Load Balancer Controller용 IAM 역할 및 정책 삭제
      - name: Delete IAM Role and Policy for LB Controller
        run: |
          POLICY_ARN="arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy"
          ROLE_NAME="AmazonEKSLoadBalancerControllerRole"

          echo "Detaching policy from role..."
          aws iam detach-role-policy --role-name $ROLE_NAME --policy-arn $POLICY_ARN || echo "Policy already detached or role does not exist."

          echo "Deleting IAM role..."
          aws iam delete-role --role-name $ROLE_NAME || echo "Role does not exist."
          
          echo "Deleting IAM policy..."
          aws iam delete-policy --policy-arn $POLICY_ARN || echo "Policy does not exist."

      # 5. IAM OIDC 공급자 삭제
      # 이 작업은 이 AWS 계정에서 GitHub Actions OIDC를 더 이상 사용하지 않을 때만 실행해야 합니다.
      - name: Delete IAM OIDC provider
        run: |
          OIDC_PROVIDER_ARN="arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com"
          echo "Deleting IAM OIDC provider..."
          aws iam delete-open-id-connect-provider --open-id-connect-provider-arn $OIDC_PROVIDER_ARN || echo "OIDC provider does not exist."
